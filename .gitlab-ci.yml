stages:
    - build
    - publish

windows-portable:
    image: cgenius/crossbuild:win
    stage: build    
    before_script:
      - mkdir -p /tmp && cd "$_"
      - mkdir -p $CI_PROJECT_DIR/output
      - cmake -DCMAKE_TOOLCHAIN_FILE="$OLDPWD/toolchains/toolchain-mingw.cmake" -DCMAKE_BUILD_TYPE=Release -DUSE_BOOST=0 -DPULL_DLLS=1 -DAPPEND_SHA=1 -DSDL2_MIXER_INCLUDE_DIR=/usr/x86_64-w64-mingw32/include/SDL2 -DSDL2_INCLUDE_DIR=/usr/x86_64-w64-mingw32/include/SDL2 "$CI_PROJECT_DIR"
    script:
      - cmake --build .    
      - cpack -G ZIP
      - cp *.zip $CI_PROJECT_DIR/output
    artifacts:
      name: "CGenius-Win-$CI_COMMIT_SHORT_SHA"
      expire_in: 1 week
      paths:
        - output/*
        
windows-installer:
    image: cgenius/crossbuild:winnsis
    stage: build
    before_script:
      - mkdir -p /tmp && cd "$_"
      - mkdir -p $CI_PROJECT_DIR/output
      - cmake -DCMAKE_TOOLCHAIN_FILE="$OLDPWD/toolchains/toolchain-mingw.cmake" -DCMAKE_BUILD_TYPE=Release -DUSE_BOOST=0 -DPULL_DLLS=1 -DAPPEND_SHA=1 -DSDL2_MIXER_INCLUDE_DIR=/usr/x86_64-w64-mingw32/include/SDL2 -DSDL2_INCLUDE_DIR=/usr/x86_64-w64-mingw32/include/SDL2 "$CI_PROJECT_DIR"
    script:
      - cmake --build .    
      - cpack -G NSIS
      - cp *.exe $CI_PROJECT_DIR/output
    artifacts:
      name: "CGenius-Win-$CI_COMMIT_SHORT_SHA"
      expire_in: 1 week
      paths:
        - output/*
                      
linux-generic:
    image: cgenius/crossbuild:linux
    stage: build
    before_script:
      - mkdir -p /tmp && cd "$_"
      - mkdir -p $CI_PROJECT_DIR/output
      - cmake -DUSE_BOOST=0 -DAPPEND_SHA=1 $CI_PROJECT_DIR "$CI_PROJECT_DIR"
    script:
      - cmake --build .    
      - cpack -G TGZ
      - cp *.tar.gz $CI_PROJECT_DIR/output
    artifacts:
      name: "CGenius-Linux-$CI_COMMIT_SHORT_SHA"
      expire_in: 1 week
      paths:
        - output/*
        
macos-64bit:
    image: cgenius/crossbuild:mac
    stage: build
    before_script:
      - mkdir -p /tmp && cd "$_"
      - mkdir -p $CI_PROJECT_DIR/output
      - mkdir CGBuildMac
      - cd CGBuildMac
      - export PATH=$PATH:/tmp/osxcross/target/bin
      - export CG_SOURCES=${CI_PROJECT_DIR}
      - export OSXCROSSPATH=/tmp/osxcross
      - export OSXOPT=${OSXCROSSPATH}/target/macports/pkgs/opt
      - x86_64-apple-darwin14-cmake -DAPPEND_SHA=1 -DUSE_SDL2=1 -DCMAKE_BUILD_TYPE="Release" -DOSXCROSS=1 -DUSE_OPENGL=0 -DUSE_BOOST=0 -DSDL2_INCLUDE_DIR=${OSXOPT}/local/include/SDL2 -DSDL2_MIXER_INCLUDE_DIR=${OSXOPT}/local/include/SDL2 -DSDL2_INCLUDE_DIR=${OSXOPT}/local/include/SDL2 ${CG_SOURCES}
    script:
      - cmake --build .    
      - bash buildMacOsBundle.sh
      - cp *.dmg $CI_PROJECT_DIR/output
    artifacts:
      name: "CGenius-MacOs-$CI_COMMIT_SHORT_SHA"
      expire_in: 1 week
      paths:
        - output/*
                            
publish:
    image: inetprocess/gitlab-release
    stage: publish
    only:
        - tags
    dependencies: 
        - windows-portable
        - windows-installer
        - linux-generic
        - macos-64bit
    script:
        - gitlab-release --message 'Build artifacts (Windows, Linux and MacOS)' ./output/*
                      
