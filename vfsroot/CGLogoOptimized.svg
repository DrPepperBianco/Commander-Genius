<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   width="132.73mm"
   height="132.96mm"
   version="1.1"
   viewBox="0 0 132.73 132.96"
   id="svg143">
  <defs
     id="defs33">
    <linearGradient
       id="linearGradient6073"
       x1="48.584"
       x2="162.42"
       y1="100.2"
       y2="193.37"
       gradientUnits="userSpaceOnUse">
      <stop
         stop-color="#3b63fe"
         offset="0"
         id="stop2" />
      <stop
         stop-color="#3785be"
         offset="1"
         id="stop4" />
    </linearGradient>
    <meshgradient
       id="meshgradient1384"
       x="94.595779"
       y="108.63262"
       gradientUnits="userSpaceOnUse">
      <meshrow
         id="meshrow17">
        <meshpatch
           id="meshpatch15">
          <stop
             stop-color="#fff"
             path="c 20.8922,0  41.7844,0  62.6766,0"
             id="stop7" />
          <stop
             stop-color="#35ffff"
             path="c 0,30.3605  0,60.721  0,91.0815"
             id="stop9" />
          <stop
             stop-color="#fff"
             path="c -20.8922,0  -41.7844,0  -62.6766,0"
             id="stop11" />
          <stop
             stop-color="#35ffff"
             path="c 0,-30.3605  0,-60.721  0,-91.0815"
             id="stop13" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <meshgradient
       id="meshgradient2886"
       x="45.007812"
       y="106.30273"
       gradientUnits="userSpaceOnUse">
      <meshrow
         id="meshrow30">
        <meshpatch
           id="meshpatch28">
          <stop
             stop-color="#fff"
             path="c 20.3659,0  40.7318,0  61.0977,0"
             id="stop20" />
          <stop
             stop-color="#0ff"
             path="c 0,30.3776  0,60.7552  0,91.1328"
             id="stop22" />
          <stop
             stop-color="#fff"
             path="c -20.3659,0  -40.7318,0  -61.0977,0"
             id="stop24" />
          <stop
             stop-color="#0ff"
             path="c 0,-30.3776  0,-60.7552  0,-91.1328"
             id="stop26" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <metadata
     id="metadata35">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     transform="translate(-39.701 -82.1)"
     id="g141">
    <ellipse
       cx="106.07"
       cy="148.58"
       rx="66.367"
       ry="66.479"
       fill="url(#linearGradient6073)"
       id="ellipse37" />
    <g
       stroke="#000"
       id="g97">
      <g
         transform="translate(-1.6453 151.87)"
         stroke-linejoin="round"
         stroke-width="2.6194"
         id="g91">
        <path
           d="m109.66-48.53-10.583 5.2917 55.59 9.3922 10.583-5.2917-55.59-9.3922"
           id="path39" />
        <path
           d="m165.25-39.138-10.583 5.2917c3.0036 1.1368 4.0626 3.119 4.1765 5.5121l10.583-5.2917c-0.31056-1.9976-0.55246-4.0054-4.1765-5.5121"
           id="path41" />
        <path
           d="m169.43-33.626-10.583 5.2917-0.41641 13.897 10.583-5.2917 0.41641-13.897"
           id="path43" />
        <path
           d="m169.01-19.728-10.583 5.2917c-0.95793 3.0555-3.6586 2.7708-6.0569 3.0655l10.583-5.2917c5.992-2.273 5.8587-2.0938 6.0569-3.0655"
           id="path45" />
        <path
           d="m165.84-16.521-8.9411 4.7638-33.685-5.2502 10.583-5.2917 35.217 2.5708c-0.22482 1.4611-1.4378 2.4572-3.1738 3.2072z"
           id="path47" />
        <path
           d="m133.79-22.299-10.583 5.2917c-1.3514 0.65298-1.3988 1.1935-1.8709 1.8709l10.583-5.2917c0.45642-1.2506 1.1698-1.5379 1.8709-1.8709"
           id="path49" />
        <path
           d="m131.92-20.428-10.583 5.2917-0.80181 35.547 10.583-5.2917 0.80181-35.547"
           id="path51" />
        <path
           d="m131.12 15.119-10.583 5.2917c0.31334 1.4602 1.0065 2.6197 2.823 2.8899l10.583-5.2917c-1.2792-0.50574-2.5863-0.97369-2.823-2.8899"
           id="path53" />
        <path
           d="m133.94 18.008-10.583 5.2917 5.7797 1.186 10.583-5.2917-5.7797-1.186"
           id="path55" />
        <path
           d="m140.86 19.265c-2.8702 1.8324-6.0039 3.6846-11.717 5.2208 1.1511-0.4722 2.4038-0.77823 2.8898-2.3386l10.583-5.2917c-0.0759 1.2114-0.82954 2.015-1.7559 2.4095"
           id="path57" />
        <path
           d="m142.61 16.856-10.583 5.2917 0.0501-4.0257 10.583-5.2917-0.0501 4.0257"
           id="path59" />
        <path
           d="m142.66 12.83-10.583 5.2917c-0.0936-0.97568-0.51722-1.8763-1.9878-2.5391l10.583-5.2917c1.0634 0.1516 1.865 0.75715 1.9878 2.5391"
           id="path61" />
        <path
           d="m140.68 10.291-10.583 5.2917-4.861-1.1192 10.583-5.2917 4.861 1.1192"
           id="path63" />
        <path
           d="m135.82 9.1719-10.583 5.2917c-1.2614-0.21925-2.027-1.0719-2.1549-2.7395l10.583-5.2917c0.15501 1.6267 1.0632 2.2992 2.1549 2.7395"
           id="path65" />
        <path
           d="m133.66 6.4324-10.583 5.2917 0.33409-16.17 10.583-5.2917-0.33409 16.17"
           id="path67" />
        <path
           d="m134-9.7374-10.583 5.2917c0.30703-0.61895 0.58799-1.241 1.9377-1.7373l10.583-5.2917c-1.2859 0.16579-1.6569 0.32373-1.9377 1.7373"
           id="path69" />
        <path
           d="m135.93-11.475-10.583 5.2917 28.865 5.312 10.583-5.2917-28.865-5.312"
           id="path71" />
        <path
           d="m164.8-6.1627-10.583 5.2917c1.5472 0.84455 2.8429 1.96 3.2406 4.0424l10.583-5.2917c-0.1661-2.2616-1.4781-3.3773-3.2406-4.0424"
           id="path73" />
        <path
           d="m168.04-2.1203-10.583 5.2917-1.1359 41.393 10.583-5.2917 1.1359-41.393"
           id="path75" />
        <path
           d="m166.9 39.273-10.583 5.2917c0.55571 3.7992-2.6587 3.3409-5.0113 3.107l10.583-5.2917c4.2809-0.33236 4.7114-1.7113 5.0113-3.107"
           id="path77" />
        <path
           d="m166.38 40.868-11.245 6.6146-56.245-11.304 10.583-5.2917 52.418 11.493"
           id="path79" />
        <path
           d="m109.47 30.888-10.583 5.2917c-1.259-0.82498-2.6052-1.4846-2.7051-4.5058l10.583-5.2917c-0.1109 2.5896 1.1299 3.7273 2.7051 4.5058"
           id="path81" />
        <path
           d="m106.77 26.382-10.583 5.2917 0.12021-71.297 10.583-5.2917-0.12021 71.297"
           id="path83" />
        <path
           d="m106.89-44.916-10.583 5.2917c0.15993-1.2621 0.16936-2.5354 2.7732-3.6142l10.583-5.2917c-1.2043 0.74488-2.4278 1.4582-2.7732 3.6142"
           id="path85" />
        <path
           d="m109.66-48.53-10.583 5.2917 10.583-5.2917"
           id="path87" />
        <path
           d="m109.66-48.53-10.583 5.2917 10.583-5.2917"
           id="path89" />
      </g>
      <path
         d="m108.07 103.34 55.59 9.3922c2.7479 0.3806 4.369 3.3362 4.1765 5.5121l0.022 13.307c-0.11598 2.184-2.731 4.5469-6.4952 3.6561l-29.16-5.6363c-1.7369-0.0722-1.8878 0.84688-1.8709 1.8709l-0.80181 35.547c0.21917 1.726 1.4835 2.6206 2.823 2.8899l5.7797 1.186c2.0914-2e-3 2.7959-0.96022 2.8898-2.3386l0.0501-4.0257c-0.32288-0.99429-0.86624-2.2991-1.9878-2.5391l-4.861-1.1192c-1.525-0.29627-2.143-1.2861-2.1549-2.7395l0.33409-16.17c0.012-1.3042 0.50093-1.7688 1.9377-1.7372l28.865 5.312c1.5332 1.1036 2.8546 2.3212 3.2406 4.0424l-1.1359 41.393c-0.017 1.8978-1.2589 3.88-5.0113 3.107l-52.418-11.493c-1.659-0.40983-2.7497-2.4703-2.7051-4.5058l0.12021-71.297c0.0497-1.6793 0.66893-3.3144 2.7732-3.6142z"
         stroke-width=".26458"
         id="path93" />
      <path
         d="m97.491 108.63 55.59 9.3922c2.7479 0.3806 4.369 3.3362 4.1765 5.5121l-0.41641 13.897c-0.11598 2.184-2.2926 3.9563-6.0569 3.0655l-29.16-5.6363c-1.7369-0.0722-1.8878 0.84688-1.8709 1.8709l-0.80181 35.547c0.21917 1.726 1.4835 2.6206 2.823 2.8898l5.7797 1.186c2.0914-2e-3 2.7959-0.96022 2.8898-2.3386l0.0501-4.0257c-0.32288-0.99429-0.86623-2.2991-1.9878-2.5391l-4.9187-1.1192c-1.525-0.29627-2.2523-1.9543-2.2641-3.4077l0.4009-13.998c0.012-1.3042 1.6034-3.1385 3.0402-3.107l27.863 5.1784c3.2203 0.81959 3.2221 2.8891 3.2239 4.6104l-1.1192 40.825c-0.017 1.8978-1.2589 3.88-5.0113 3.107l-52.418-11.493c-1.659-0.40983-2.7497-2.4703-2.7051-4.5058l0.12021-71.297c0.04973-1.6793 0.66892-3.3144 2.7732-3.6142z"
         fill="url(#meshgradient1384)"
         stroke-width="2.6194"
         id="path95" />
    </g>
    <g
       id="g137">
      <path
         transform="matrix(1.0688 0 0 .99631 1.6661 -2.8253)"
         d="m48.375 106.3c-1.884 0.12694-3.184 1.0917-3.3672 2.7305l2.9961 70.723c-0.04281 2.7686 1.1286 4.8819 3.8457 5.959l50.18 11.66c1.4845 0.39864 3.6543-1.2181 3.8086-3.4746l-0.20312-12.635c-0.11003-1.6229-1.0743-3.692-4.127-4.4824l-28.008-5.9336c-0.973-0.31847-1.698-0.95882-1.793-2.4062l-0.78516-33.621c0.01759-2.9339 1.7841-2.323 3.5234-2.0586l27.225 5.1484c1.9332-0.15408 3.9738-0.65237 4.3027-3.9473l0.13281-13.631c-0.36724-2.6929-1.7664-4.3224-4.2754-4.8105z"
         fill-opacity=".57706"
         id="path99" />
      <path
         transform="translate(6.8792 -2.6458)"
         d="m48.375 106.3c-1.884 0.12694-3.184 1.0917-3.3672 2.7305l2.9961 70.723c-0.04281 2.7686 1.1286 4.8819 3.8457 5.959l50.18 11.66c1.4845 0.39864 3.6543-1.2181 3.8086-3.4746l-0.20312-12.635c-0.11003-1.6229-1.0743-3.692-4.127-4.4824l-28.008-5.9336c-0.973-0.31847-1.698-0.95882-1.793-2.4062l-0.78516-33.621c0.01759-2.9339 1.7841-2.323 3.5234-2.0586l27.225 5.1484c1.9332-0.15408 3.9738-0.65237 4.3027-3.9473l0.13281-13.631c-0.36724-2.6929-1.7664-4.3224-4.2754-4.8105z"
         stroke="#000"
         stroke-width="2.6194"
         id="path101" />
      <g
         transform="translate(-3.7042 140.23)"
         stroke="#00001e"
         stroke-linejoin="round"
         stroke-width="2.6194"
         id="g135">
        <path
           d="m58.958-36.572-10.583 5.2917c-1.0171 0.36461-2.5654 1.0464-3.3672 2.7305l10.583-5.2917 3.3672-2.7305"
           id="path103" />
        <path
           d="m55.591-33.842-10.583 5.2917 2.9961 70.723 10.583-5.2917-2.9961-70.723"
           id="path105" />
        <path
           d="m58.587 36.881-10.583 5.2917c0.19184 2.7712 1.4268 4.7913 3.8457 5.959l10.583-5.2917c-1.7743-1.576-3.6285-3.0854-3.8457-5.959"
           id="path107" />
        <path
           d="m62.433 42.84-10.583 5.2917 50.18 11.66 10.583-5.2917-50.18-11.66"
           id="path109" />
        <path
           d="m103.85 59.577 1.7813-15.895 10.583-5.2917 0.20312 12.635c-0.40695 4.4015-7.3473 5.8172-12.568 8.5517z"
           id="path111" />
        <path
           d="m116.22 38.391-10.583 5.2917c-0.45623-2.5103-1.9808-3.8399-4.127-4.4824l10.583-5.2917c2.7122 0.5395 3.5705 2.4032 4.127 4.4824"
           id="path113" />
        <path
           d="m112.09 33.908-10.583 5.2917-28.008-5.9336 10.583-5.2917 28.008 5.9336"
           id="path115" />
        <path
           d="m84.083 27.975-10.583 5.2917c-1.0554-0.4148-1.554-1.3006-1.793-2.4062l10.583-5.2917c0.17622 1.0128 0.61425 1.8947 1.793 2.4062"
           id="path117" />
        <path
           d="m82.29 25.568-10.583 5.2917-0.78516-33.621 10.583-5.2917 0.78516 33.621"
           id="path119" />
        <path
           d="m81.505-8.0528-10.583 5.2917 3.5234-2.0586 10.583-5.2917-3.5234 2.0586"
           id="path121" />
        <path
           d="m85.029-10.111-10.583 5.2917 27.225 5.1484 10.583-5.2917-27.225-5.1484"
           id="path123" />
        <path
           d="m113.17-4.4432-11.505 4.772c1.5135-0.65016 3.0894-0.77581 4.3027-3.9473l10.583-5.2917c-0.14988 1.5519-0.28633 3.751-3.3814 4.467"
           id="path125" />
        <path
           d="m116.56-8.9102-10.583 5.2917 0.13281-13.631 10.583-5.2917-0.13281 13.631"
           id="path127" />
        <path
           d="m116.69-22.541-10.583 5.2917c-0.47717-2.8675-2.3109-3.9262-4.2754-4.8105l10.583-5.2917c2.5452 0.54931 3.8711 2.2463 4.2754 4.8105"
           id="path129" />
        <path
           d="m112.41-27.352-10.583 5.2917-53.455-9.2207 10.583-5.2917 53.455 9.2207"
           id="path131" />
        <path
           d="m58.958-36.572-10.583 5.2917-1.5368 0.33409c4.04-1.8753 10.067-5.7374 12.12-5.6258"
           id="path133" />
      </g>
    </g>
    <path
       transform="translate(-3.7042 2.6458)"
       d="m48.375 106.3c-1.884 0.12694-3.184 1.0917-3.3672 2.7305l2.9961 70.723c-0.04281 2.7686 1.1286 4.8819 3.8457 5.959l50.18 11.66c1.4845 0.39864 3.6543-1.2181 3.8086-3.4746l-0.20312-12.635c-0.11003-1.6229-1.0743-3.692-4.127-4.4824l-28.008-5.9336c-0.973-0.31847-1.698-0.95882-1.793-2.4062l-0.78516-33.621c0.01759-2.9339 1.7841-2.323 3.5234-2.0586l27.225 5.1484c1.9332-0.15408 3.9738-0.65237 4.3027-3.9473l0.13281-13.631c-0.36724-2.6929-1.7664-4.3224-4.2754-4.8105z"
       fill="url(#meshgradient2886)"
       stroke="#000"
       stroke-width="2.6194"
       id="path139" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
